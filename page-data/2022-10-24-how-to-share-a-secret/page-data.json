{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/2022-10-24-how-to-share-a-secret","result":{"data":{"post":{"__typename":"MdxPost","slug":"/2022-10-24-how-to-share-a-secret","title":"How to Share a Secret — Paper Summary","date":"24.10.2022","tags":[{"name":"summary","slug":"summary"},{"name":"paper","slug":"paper"}],"description":null,"canonicalUrl":"https://elvischidera.com/2022-10-24-how-to-share-a-secret/","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Share a Secret — Paper Summary\",\n  \"slug\": \"/2022-10-24-how-to-share-a-secret\",\n  \"date\": \"2022-10-24T00:00:00.000Z\",\n  \"canonicalUrl\": \"https://elvischidera.com/2022-10-24-how-to-share-a-secret/\",\n  \"banner\": \"./assets/banner.jpeg\",\n  \"tags\": [\"summary\", \"paper\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Author: Adi Shamir\"), mdx(\"p\", null, \"Date: 1979\"), mdx(\"p\", null, \"Link: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://web.mit.edu/6.857/OldStuff/Fall03/ref/Shamir-HowToShareASecret.pdf\"\n  }), \"PDF\")), mdx(\"hr\", null), mdx(\"p\", null, \"Note: This note is augmented with paragraphs from Wikipedia.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The author shows how to divide data \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \" into \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n\"), \" pieces in such a way that \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \" is easily reconstructable from any \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k\"), \" pieces, but even complete knowledge of\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k - 1\"), \" pieces reveals absolutely no information about \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \" (i.e: all its possible values are equally likely).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Such a scheme is called a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(k, n)\"), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Threshold_cryptosystem\"\n  }), \"threshold scheme\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Efficient threshold schemes can be used in the management of cryptographic keys.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"By using a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(k, n)\"), \" threshold scheme with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n = 2k - 1\"), \" we get a very robust key management scheme: We can recover the original key even when \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[n / 2] = k - 1\"), \" of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n\"), \" pieces are destroyed, but our opponents cannot reconstruct the key even when security breaches expose \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[n / 2] = k - 1\"), \" of the remaining \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k\"), \" pieces.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"E.g:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"k = 3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"n = 2k - 1 = 2(3) - 1 = 5\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"n / 2 = 2.5 = 2 (rounded down) = k - 1\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If 2 (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n / 2\"), \") pieces are destroyed, the remaining 3 (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k\"), \") pieces can be used to recover the key.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"If 2 (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n / 2\"), \") pieces are exposed, the opponent can\\u2019t reconstruct the key.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The scheme proposed in this paper is based on polynomial interpolation:\\ngiven \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k\"), \" points in the 2-dimensional plane (\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\\u2081\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"y\\u2081\"), \"), \\u2026 ,(\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\\u2096\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"y\\u2096\"), \") with distinct \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"x\\u1D62\"), \"'s , there is one and only one\\npolynomial \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"q(x)\"), \" of degree \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k - 1\"), \"such that \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"q(x) =y\\u1D62\"), \" for all \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"i\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The essential idea of the scheme is based on the  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.m.wikipedia.org/wiki/Lagrange_polynomial\"\n  }), \"Lagrange interpolation theorem\"), \" , specifically that\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k\"), \" points is enough to uniquely determine a  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.m.wikipedia.org/wiki/Polynomial\"\n  }), \"polynomial\"), \"  of  \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.m.wikipedia.org/wiki/Degree_of_a_polynomial\"\n  }), \"degree\"), \"  less than or equal to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k \\u2212 1\"), \". For instance:\"), mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"* `2`  [points](https://en.m.wikipedia.org/wiki/Point_(geometry))  are sufficient to define a  [line](https://en.m.wikipedia.org/wiki/Line_(geometry))\\n* `3` points are sufficient to define a  [parabola](https://en.m.wikipedia.org/wiki/Parabola)\\n* `4` points to define a  [cubic curve](https://en.m.wikipedia.org/wiki/Cubic_function)  and\\n* so forth. \\u2014 [Wikipedia](https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing)\\n\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Assume that the data \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \" is (or can be made) a number.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"To divide \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \" into pieces \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\\u1D62\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pick a random \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k - 1\"), \" degree polynomial: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"q(x) = a\\u2080 + a\\u2081x + ... a\\u2096\\u208B\\u2081 x\\u1D4F\\u207B\\xB9\"), \" in which \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u2080=D\"), \", and\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Evaluate: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\\u2081= q(1)\"), \", \\u2026 ,\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\\u1D62= q(i)\"), \", \\u2026 ,\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\\u2099 = q(n)\"), \".\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Given any subset of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k\"), \" of these \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\\u1D62\"), \" values (together with their identifying indices), the coefficients of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"q(x)\"), \" can be found by interpolation, and then evaluate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D = q(O)\"), \". Knowledge of just \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k - 1\"), \" of these values, on the other hand, does not suffice in order to calculate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Example calculation using integer arithmetic:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"D = 1234\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n = 6\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k = 3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"k - 1 = 2\"), \" numbers are taken at random. Let them be \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"166\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"94\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This yields coefficients:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u2080 = 1234\"), \" (i.e: the secret)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u2081 = 166\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u2082 = 94\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The polynomial to produce secret shares (points): \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"q(x) = 1234 + 166x + 94x\\xB2\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Each \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"n\"), \" participant in the scheme receives a different point from the polynomial:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2081 = (1, 1494)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2082 = (2, 1942)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2083 = (3, 2578)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2084 = (4, 3402)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2085 = (5, 4414)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"D\\u2086 = (6, 5614)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Polynomial interpolation can be used to reconstruct the secret given any 3 point.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Problem of using integer arithmetic\"), \":\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Although the simplified version of the method demonstrated above, which uses integer arithmetic rather than finite field arithmetic, works, there is a security problem:  An attacker gains information about D with every \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"D\\u1D62\"), \" they find.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"This problem can be fixed by using finite field arithmetic. A field of size \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"p \\u2208 \\u2119 : p > D, p > n\"), \" is used.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In practice this is only a small change:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A prime \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"p\"), \" must be chosen that is bigger than the number of participants and every \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u1D62 \"), \"(including \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"a\\u2080 = D\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The points on the polynomial must also be calculated as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(x, q(x) mod p)\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(x, q(x))\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"p\"), \" is publicly known: Everybody who receives a point must also know its value.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Useful properties of the scheme includes:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Minimal\"), \": The size of each piece does not exceed the size of the original data.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Extensible\"), \": For any given threshold, shares can be dynamically added or deleted without affecting existing shares.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Dynamic\"), \": Security can be easily enhanced without changing the secret, but by changing the polynomial occasionally (keeping the same free term) and constructing new shares for the participants.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Flexible\"), \": In organizations where hierarchy is important, each participant can be issued different numbers of shares according to their importance inside the organization.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Author: Adi Shamir Date: 1979 Link:  PDF Note: This note is augmented with paragraphs from Wikipedia. The author shows how to divide data  D…","timeToRead":2,"banner":{"childImageSharp":{"resize":{"src":"/static/b3e6c41825910d9da6db54c86138c2c0/a6c62/banner.jpg"}}}}},"pageContext":{"slug":"/2022-10-24-how-to-share-a-secret","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}